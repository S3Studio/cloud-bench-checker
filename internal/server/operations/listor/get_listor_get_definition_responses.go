// Code generated by go-swagger; DO NOT EDIT.

package listor

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetListorGetDefinitionOKCode is the HTTP code returned for type GetListorGetDefinitionOK
const GetListorGetDefinitionOKCode int = 200

/*
GetListorGetDefinitionOK Definition of a Listor

swagger:response getListorGetDefinitionOK
*/
type GetListorGetDefinitionOK struct {

	/*
	  In: Body
	*/
	Payload *GetListorGetDefinitionOKBody `json:"body,omitempty"`
}

// NewGetListorGetDefinitionOK creates GetListorGetDefinitionOK with default headers values
func NewGetListorGetDefinitionOK() *GetListorGetDefinitionOK {

	return &GetListorGetDefinitionOK{}
}

// WithPayload adds the payload to the get listor get definition o k response
func (o *GetListorGetDefinitionOK) WithPayload(payload *GetListorGetDefinitionOKBody) *GetListorGetDefinitionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get listor get definition o k response
func (o *GetListorGetDefinitionOK) SetPayload(payload *GetListorGetDefinitionOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetListorGetDefinitionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetListorGetDefinitionNotFoundCode is the HTTP code returned for type GetListorGetDefinitionNotFound
const GetListorGetDefinitionNotFoundCode int = 404

/*
GetListorGetDefinitionNotFound Id not found

swagger:response getListorGetDefinitionNotFound
*/
type GetListorGetDefinitionNotFound struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetListorGetDefinitionNotFound creates GetListorGetDefinitionNotFound with default headers values
func NewGetListorGetDefinitionNotFound() *GetListorGetDefinitionNotFound {

	return &GetListorGetDefinitionNotFound{}
}

// WithPayload adds the payload to the get listor get definition not found response
func (o *GetListorGetDefinitionNotFound) WithPayload(payload interface{}) *GetListorGetDefinitionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get listor get definition not found response
func (o *GetListorGetDefinitionNotFound) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetListorGetDefinitionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
