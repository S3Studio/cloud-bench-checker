// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "API for https://github.com/S3Studio/cloud-bench-checker described with Swagger 2.0\n",
    "title": "Cloud Bench Checker API",
    "contact": {
      "url": "https://github.com/S3Studio/cloud-bench-checker"
    },
    "license": {
      "name": "MIT License",
      "url": "https://github.com/S3Studio/cloud-bench-checker?tab=MIT-1-ov-file"
    },
    "version": "0.2.0"
  },
  "basePath": "/api",
  "paths": {
    "/baseline/getDefinition": {
      "get": {
        "description": "Get definition of a Baseline",
        "produces": [
          "application/json"
        ],
        "tags": [
          "baseline"
        ],
        "parameters": [
          {
            "type": "integer",
            "description": "Id of Baseline",
            "name": "id",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "default": false,
            "description": "Include hash of definition",
            "name": "with_hash",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "description": "Include yaml of definition",
            "name": "with_yaml",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Definition of a Baseline",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/baseline4api"
                  }
                },
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Id not found",
            "schema": {
              "$ref": "#/responses/notfound"
            }
          }
        }
      }
    },
    "/baseline/getIds": {
      "get": {
        "description": "Get ids of Baseline",
        "produces": [
          "application/json"
        ],
        "tags": [
          "baseline"
        ],
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Tag to filter",
            "name": "tag",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Ids of Baseline",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "msg": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/baseline/getListorId": {
      "get": {
        "description": "Get the ids of the Listors used in all the Checkers of the Baseline",
        "produces": [
          "application/json"
        ],
        "tags": [
          "baseline"
        ],
        "parameters": [
          {
            "type": "integer",
            "description": "Id of Baseline",
            "name": "id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ids of Listors",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Id not found",
            "schema": {
              "$ref": "#/responses/notfound"
            }
          }
        }
      }
    },
    "/baseline/getProp": {
      "post": {
        "description": "Extract properties from the raw data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "baseline"
        ],
        "parameters": [
          {
            "type": "integer",
            "description": "Id of Baseline",
            "name": "id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Name of authentication profile",
            "name": "profile",
            "in": "header",
            "required": true
          },
          {
            "description": "List of raw data from Listor",
            "name": "listor_data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/listor_data"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of the result of GetProp of each Checker",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/baseline_data"
                  }
                },
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error occurs",
            "schema": {
              "$ref": "#/responses/error"
            }
          },
          "404": {
            "description": "Id not found",
            "schema": {
              "$ref": "#/responses/notfound"
            }
          }
        }
      }
    },
    "/baseline/validate": {
      "post": {
        "description": "Validate the property against the benchmark and return the result",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "baseline"
        ],
        "parameters": [
          {
            "type": "integer",
            "description": "Id of Baseline",
            "name": "id",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Metadata of Baseline to be outputted",
            "name": "metadata",
            "in": "query"
          },
          {
            "description": "List of properties to be validated",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/baseline_data"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of validation results",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/validate_result"
                  }
                },
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error occurs",
            "schema": {
              "$ref": "#/responses/error"
            }
          },
          "404": {
            "description": "Id not found",
            "schema": {
              "$ref": "#/responses/notfound"
            }
          }
        }
      }
    },
    "/listor/getDefinition": {
      "get": {
        "description": "Get definition of a Listor",
        "produces": [
          "application/json"
        ],
        "tags": [
          "listor"
        ],
        "parameters": [
          {
            "type": "integer",
            "description": "Id of Listor",
            "name": "id",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "default": false,
            "description": "Include hash of definition",
            "name": "with_hash",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "description": "Include yaml of definition",
            "name": "with_yaml",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Definition of a Listor",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/listor4api"
                  }
                },
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Id not found",
            "schema": {
              "$ref": "#/responses/notfound"
            }
          }
        }
      }
    },
    "/listor/getIds": {
      "get": {
        "description": "Get ids of Listor",
        "produces": [
          "application/json"
        ],
        "tags": [
          "listor"
        ],
        "parameters": [
          {
            "type": "string",
            "description": "Cloud type to filter",
            "name": "cloud_type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Ids of Listor",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "msg": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/listor/listData": {
      "get": {
        "description": "Get list of all raw data according to the definition",
        "produces": [
          "application/json"
        ],
        "tags": [
          "listor"
        ],
        "parameters": [
          {
            "type": "integer",
            "description": "Id of Listor",
            "name": "id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Name of authentication profile",
            "name": "profile",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of raw data",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/listor_data"
                },
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error occurs",
            "schema": {
              "$ref": "#/responses/error"
            }
          },
          "404": {
            "description": "Id not found",
            "schema": {
              "$ref": "#/responses/notfound"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "baseline4api": {
      "type": "object",
      "properties": {
        "checker": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/checker4api"
          }
        },
        "hash": {
          "$ref": "#/definitions/item_hash"
        },
        "id": {
          "type": "integer"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tag": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "yaml": {
          "type": "string"
        },
        "yaml_hidden": {
          "type": "boolean"
        }
      }
    },
    "baseline_data": {
      "type": "object",
      "properties": {
        "baseline_hash": {
          "$ref": "#/definitions/item_hash"
        },
        "checker_prop": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer"
        }
      }
    },
    "checker4api": {
      "type": "object",
      "properties": {
        "cloud_type": {
          "$ref": "#/definitions/cloudtype4api"
        },
        "listor": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "cloudtype4api": {
      "type": "string",
      "enum": [
        "tencent_cloud",
        "tencent_cos",
        "aliyun",
        "aliyun_oss",
        "k8s",
        "azure"
      ]
    },
    "error_response": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "data": {
          "type": "object"
        },
        "msg": {
          "type": "string"
        }
      }
    },
    "item_hash": {
      "type": "object",
      "properties": {
        "sha256": {
          "type": "string"
        }
      }
    },
    "listor4api": {
      "type": "object",
      "properties": {
        "cloud_type": {
          "$ref": "#/definitions/cloudtype4api"
        },
        "hash": {
          "$ref": "#/definitions/item_hash"
        },
        "id": {
          "type": "integer"
        },
        "rs_type": {
          "type": "string"
        },
        "yaml": {
          "type": "string"
        },
        "yaml_hidden": {
          "type": "boolean"
        }
      }
    },
    "listor_data": {
      "type": "object",
      "properties": {
        "cloud_type": {
          "$ref": "#/definitions/cloudtype4api"
        },
        "data": {
          "type": "string"
        },
        "listor_hash": {
          "$ref": "#/definitions/item_hash"
        },
        "listor_id": {
          "type": "integer"
        }
      }
    },
    "validate_result": {
      "type": "object",
      "properties": {
        "actual_value": {
          "type": "string"
        },
        "cloud_type": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resource_id": {
          "type": "string"
        },
        "resource_in_risk": {
          "type": "boolean"
        },
        "resource_name": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "error": {
      "description": "General Error",
      "schema": {
        "$ref": "#/definitions/error_response"
      }
    },
    "notfound": {
      "description": "Entity not found.",
      "schema": {
        "$ref": "#/definitions/error_response"
      }
    }
  },
  "tags": [
    {
      "description": "Used to retrieve a list of resources and their basic information from the cloud with connector",
      "name": "listor"
    },
    {
      "description": "Used to extract required properties and validate that they meet the requirements of benchmark guidelines",
      "name": "checker"
    },
    {
      "description": "Used to manage checkers and listors. It is recommended that each baseline corresponds to a single benchmark recommendation",
      "name": "baseline"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "API for https://github.com/S3Studio/cloud-bench-checker described with Swagger 2.0\n",
    "title": "Cloud Bench Checker API",
    "contact": {
      "url": "https://github.com/S3Studio/cloud-bench-checker"
    },
    "license": {
      "name": "MIT License",
      "url": "https://github.com/S3Studio/cloud-bench-checker?tab=MIT-1-ov-file"
    },
    "version": "0.2.0"
  },
  "basePath": "/api",
  "paths": {
    "/baseline/getDefinition": {
      "get": {
        "description": "Get definition of a Baseline",
        "produces": [
          "application/json"
        ],
        "tags": [
          "baseline"
        ],
        "parameters": [
          {
            "type": "integer",
            "description": "Id of Baseline",
            "name": "id",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "default": false,
            "description": "Include hash of definition",
            "name": "with_hash",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "description": "Include yaml of definition",
            "name": "with_yaml",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Definition of a Baseline",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/baseline4api"
                  }
                },
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Id not found",
            "schema": {
              "description": "Entity not found.",
              "schema": {
                "$ref": "#/definitions/error_response"
              }
            }
          }
        }
      }
    },
    "/baseline/getIds": {
      "get": {
        "description": "Get ids of Baseline",
        "produces": [
          "application/json"
        ],
        "tags": [
          "baseline"
        ],
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Tag to filter",
            "name": "tag",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Ids of Baseline",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "msg": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/baseline/getListorId": {
      "get": {
        "description": "Get the ids of the Listors used in all the Checkers of the Baseline",
        "produces": [
          "application/json"
        ],
        "tags": [
          "baseline"
        ],
        "parameters": [
          {
            "type": "integer",
            "description": "Id of Baseline",
            "name": "id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ids of Listors",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Id not found",
            "schema": {
              "description": "Entity not found.",
              "schema": {
                "$ref": "#/definitions/error_response"
              }
            }
          }
        }
      }
    },
    "/baseline/getProp": {
      "post": {
        "description": "Extract properties from the raw data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "baseline"
        ],
        "parameters": [
          {
            "type": "integer",
            "description": "Id of Baseline",
            "name": "id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Name of authentication profile",
            "name": "profile",
            "in": "header",
            "required": true
          },
          {
            "description": "List of raw data from Listor",
            "name": "listor_data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/listor_data"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of the result of GetProp of each Checker",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/baseline_data"
                  }
                },
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error occurs",
            "schema": {
              "description": "General Error",
              "schema": {
                "$ref": "#/definitions/error_response"
              }
            }
          },
          "404": {
            "description": "Id not found",
            "schema": {
              "description": "Entity not found.",
              "schema": {
                "$ref": "#/definitions/error_response"
              }
            }
          }
        }
      }
    },
    "/baseline/validate": {
      "post": {
        "description": "Validate the property against the benchmark and return the result",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "baseline"
        ],
        "parameters": [
          {
            "type": "integer",
            "description": "Id of Baseline",
            "name": "id",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Metadata of Baseline to be outputted",
            "name": "metadata",
            "in": "query"
          },
          {
            "description": "List of properties to be validated",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/baseline_data"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of validation results",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/validate_result"
                  }
                },
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error occurs",
            "schema": {
              "description": "General Error",
              "schema": {
                "$ref": "#/definitions/error_response"
              }
            }
          },
          "404": {
            "description": "Id not found",
            "schema": {
              "description": "Entity not found.",
              "schema": {
                "$ref": "#/definitions/error_response"
              }
            }
          }
        }
      }
    },
    "/listor/getDefinition": {
      "get": {
        "description": "Get definition of a Listor",
        "produces": [
          "application/json"
        ],
        "tags": [
          "listor"
        ],
        "parameters": [
          {
            "type": "integer",
            "description": "Id of Listor",
            "name": "id",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "default": false,
            "description": "Include hash of definition",
            "name": "with_hash",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "description": "Include yaml of definition",
            "name": "with_yaml",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Definition of a Listor",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/listor4api"
                  }
                },
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Id not found",
            "schema": {
              "description": "Entity not found.",
              "schema": {
                "$ref": "#/definitions/error_response"
              }
            }
          }
        }
      }
    },
    "/listor/getIds": {
      "get": {
        "description": "Get ids of Listor",
        "produces": [
          "application/json"
        ],
        "tags": [
          "listor"
        ],
        "parameters": [
          {
            "type": "string",
            "description": "Cloud type to filter",
            "name": "cloud_type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Ids of Listor",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "msg": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/listor/listData": {
      "get": {
        "description": "Get list of all raw data according to the definition",
        "produces": [
          "application/json"
        ],
        "tags": [
          "listor"
        ],
        "parameters": [
          {
            "type": "integer",
            "description": "Id of Listor",
            "name": "id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Name of authentication profile",
            "name": "profile",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of raw data",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/listor_data"
                },
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error occurs",
            "schema": {
              "description": "General Error",
              "schema": {
                "$ref": "#/definitions/error_response"
              }
            }
          },
          "404": {
            "description": "Id not found",
            "schema": {
              "description": "Entity not found.",
              "schema": {
                "$ref": "#/definitions/error_response"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "baseline4api": {
      "type": "object",
      "properties": {
        "checker": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/checker4api"
          }
        },
        "hash": {
          "$ref": "#/definitions/item_hash"
        },
        "id": {
          "type": "integer"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tag": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "yaml": {
          "type": "string"
        },
        "yaml_hidden": {
          "type": "boolean"
        }
      }
    },
    "baseline_data": {
      "type": "object",
      "properties": {
        "baseline_hash": {
          "$ref": "#/definitions/item_hash"
        },
        "checker_prop": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer"
        }
      }
    },
    "checker4api": {
      "type": "object",
      "properties": {
        "cloud_type": {
          "$ref": "#/definitions/cloudtype4api"
        },
        "listor": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "cloudtype4api": {
      "type": "string",
      "enum": [
        "tencent_cloud",
        "tencent_cos",
        "aliyun",
        "aliyun_oss",
        "k8s",
        "azure"
      ]
    },
    "error_response": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "data": {
          "type": "object"
        },
        "msg": {
          "type": "string"
        }
      }
    },
    "item_hash": {
      "type": "object",
      "properties": {
        "sha256": {
          "type": "string"
        }
      }
    },
    "listor4api": {
      "type": "object",
      "properties": {
        "cloud_type": {
          "$ref": "#/definitions/cloudtype4api"
        },
        "hash": {
          "$ref": "#/definitions/item_hash"
        },
        "id": {
          "type": "integer"
        },
        "rs_type": {
          "type": "string"
        },
        "yaml": {
          "type": "string"
        },
        "yaml_hidden": {
          "type": "boolean"
        }
      }
    },
    "listor_data": {
      "type": "object",
      "properties": {
        "cloud_type": {
          "$ref": "#/definitions/cloudtype4api"
        },
        "data": {
          "type": "string"
        },
        "listor_hash": {
          "$ref": "#/definitions/item_hash"
        },
        "listor_id": {
          "type": "integer"
        }
      }
    },
    "validate_result": {
      "type": "object",
      "properties": {
        "actual_value": {
          "type": "string"
        },
        "cloud_type": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resource_id": {
          "type": "string"
        },
        "resource_in_risk": {
          "type": "boolean"
        },
        "resource_name": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "error": {
      "description": "General Error",
      "schema": {
        "$ref": "#/definitions/error_response"
      }
    },
    "notfound": {
      "description": "Entity not found.",
      "schema": {
        "$ref": "#/definitions/error_response"
      }
    }
  },
  "tags": [
    {
      "description": "Used to retrieve a list of resources and their basic information from the cloud with connector",
      "name": "listor"
    },
    {
      "description": "Used to extract required properties and validate that they meet the requirements of benchmark guidelines",
      "name": "checker"
    },
    {
      "description": "Used to manage checkers and listors. It is recommended that each baseline corresponds to a single benchmark recommendation",
      "name": "baseline"
    }
  ]
}`))
}
