# This is conf file of example baselines used in cloud-bench-checker,
# which shows how to execute checks on multiple types of cloud.
# Modify or disable specific cloud profile on demond.
#
# Template file from github.com/s3studio/cloud-bench-checker

option:
  output_format: csv
  output_filename: test
  output_metadata:
    - Name
    - Benchmark
    - Section
    - ProfileApplicability
    - AssessmentStatus
  output_risk_only: false

profile:
  tencent: $ENV
  aliyun: $ENV
  #k8s: $ENV
  azure: $ENV

listor:
  - id: 1
    cloud_type: tencent_cloud
    rs_type: cvm
    list_cmd:
      tencent_cloud:
        service: cvm
        version: "2017-03-12"
        action:  DescribeInstances
      data_list_json_path: $.InstanceSet
  - id: 2
    cloud_type: aliyun
    rs_type: disk
    list_cmd:
      aliyun:
        endpoint: ecs
        endpoint_with_region: true
        version: "2014-05-26"
        action:  DescribeDisks
      data_list_json_path: $.Disks.Disk
    paginator:
      pagination_type: 4
      limit_type: int
      limit_name: MaxResults
      marker_name: NextToken
      next_marker_name: NextToken
  - id: 3
    cloud_type: k8s
    rs_type: pod_kube-apiserver
    list_cmd:
      k8s_list:
        resource: pods
        list_options:
          labelSelector: "component=kube-apiserver"
  - id: 4
    cloud_type: azure
    rs_type: virtualMachine
    list_cmd:
      azure:
        provider: Compute
        version: "2024-07-01"
        rs_type: virtualMachines

baseline:
  - tag: ["test", "CIS_Alibaba_Cloud_Foundation_Benchmark_v1.0.0"]
    metadata:
      Name: "Ensure that ‘Virtual Machine’s disk’ are encrypted"
      Benchmark: "CIS_Alibaba_Cloud_Foundation_Benchmark_v1.0.0"
      Section: "4.2"
      ProfileApplicability: "Level 1"
      AssessmentStatus: Manual
    checker:
      - cloud_type: tencent_cloud
        listor: [1]
        extract_cmd:
          id_jsonpath: $.InstanceId
          name_jsonpath: $.InstanceName
          extract_jsonpath:
            path: $.DataDisks[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "contains": {
                "type": "object",
                "properties": {
                  "Encrypt": {"enum": [false]}
                }
              }
            }
          value_jsonpath: $[*][DiskId,Encrypt]
      - cloud_type: aliyun
        listor: [2]
        extract_cmd:
          id_jsonpath: $.DiskId
          name_jsonpath: $.DiskName
          extract_jsonpath:
            path: $
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "object",
              "properties": {
                "Encrypted": {"enum": [false]}
              }
            }
          value_jsonpath: $.Encrypted
  - tag: ["test", "CIS_Microsoft_Azure_Foundations_Benchmark_v2.1.0"]
    metadata:
      Name: "Ensure that 'OS and Data' disks are encrypted with Customer Managed Key (CMK)"
      Benchmark: "CIS_Microsoft_Azure_Foundations_Benchmark_v2.1.0"
      Section: "7.3"
      ProfileApplicability: "Level 2"
      AssessmentStatus: Automated
    checker: # only osDisk is checked here
      - cloud_type: azure
        listor: [4]
        extract_cmd:
          id_jsonpath: $.name
          extract_jsonpath:
            path: $
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "object",
              "properties": {
                "properties": {
                  "type": "object",
                  "properties": {
                    "storageProfile": {
                      "type": "object",
                      "properties": {
                        "osDisk": {
                          "type": "object",
                          "properties": {
                            "encryptionSettings": {
                              "type": "object",
                              "properties": {
                                "enabled": { "enum": [false] }
                              }
                            }
                          }
                        }
                      },
                      "required": ["osDisk"]
                    }
                  },
                  "required": ["storageProfile"]
                }
              },
              "required": ["properties"]
            }
          value_jsonpath: $.properties.storageProfile.osDisk.encryptionSettings.enabled
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0"]
    metadata:
      Name: "Ensure that the --anonymous-auth argument is set to false"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.1"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Manual
    checker:
      - cloud_type: k8s
        listor: [3]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "anyOf": [
                {
                  "contains": {
                    "type": "string",
                    "enum": ["--anonymous-auth=true"]
                  }
                },
                {
                  "not": {
                    "contains": {
                      "type": "string",
                      "pattern": "^--anonymous-auth="
                    }
                  }
                }
              ]
            }
          value_jsonpath: $[?(@=~/^--anonymous-auth=/)]
