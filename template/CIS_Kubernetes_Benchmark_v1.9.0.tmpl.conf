# This is conf file of example baselines for CIS_Kubernetes_Benchmark_v1.9.0,
# includes available items in section 1.2.
# Additionally, section 5.7.4 is included as an example of multiple ids of listor,
# but it has to be reminded that it is not the exact way as the CIS benchmark shows.
#
# Template file from github.com/s3studio/cloud-bench-checker

option:
  output_format: csv
  output_filename: test
  output_metadata:
    - Name
    - Benchmark
    - Section
    - ProfileApplicability
    - AssessmentStatus
  output_risk_only: false

profile:
  k8s: $ENV

listor:
  - id: 1
    cloud_type: k8s
    rs_type: pod_kube-apiserver
    list_cmd:
      k8s_list:
        namespace: kube-system
        resource: pods
        list_options:
          labelSelector: "component=kube-apiserver"
  - id: 2
    cloud_type: k8s
    rs_type: pod_in_default
    list_cmd:
      k8s_list:
        namespace: default
        resource: pods
  - id: 3
    cloud_type: k8s
    rs_type: deployment_in_default
    list_cmd:
      k8s_list:
        namespace: default
        resource: deployments
  - id: 4
    cloud_type: k8s
    rs_type: statefulset_in_default
    list_cmd:
      k8s_list:
        namespace: default
        resource: statefulsets

baseline:
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0"]
    metadata:
      Name: "Ensure that the --anonymous-auth argument is set to false"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.1"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Manual
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "anyOf": [
                {
                  "contains": {
                    "type": "string",
                    "enum": ["--anonymous-auth=true"]
                  }
                },
                {
                  "not": {
                    "contains": {
                      "type": "string",
                      "pattern": "^--anonymous-auth="
                    }
                  }
                }
              ]
            }
          value_jsonpath: $[?(@=~/^--anonymous-auth=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0"]
    metadata:
      Name: "Ensure that the --token-auth-file parameter is not set"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.2"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Automated
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "contains": {
                "type": "string",
                "pattern": "^--token-auth-file="
              }
            }
          value_jsonpath: $[?(@=~/^--token-auth-file=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0"]
    metadata:
      Name: "Ensure that the --kubelet-client-certificate and --kubelet-client-key arguments are set as appropriate"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.4"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Automated
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "not": {
                "allOf": [
                  {
                    "contains": {
                      "type": "string",
                      "pattern": "^--kubelet-client-certificate="
                    }
                  },
                  {
                    "contains": {
                      "type": "string",
                      "pattern": "^--kubelet-client-key="
                    }
                  }
                ]
              }
            }
          value_jsonpath: $[?(@=~/^--kubelet-client-(certificate|key)=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0"]
    metadata:
      Name: "Ensure that the --kubelet-certificate-authority argument is set as appropriate"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.5"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Automated
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "not": {
                "contains": {
                  "type": "string",
                  "pattern": "^--kubelet-certificate-authority="
                }
              }
            }
          value_jsonpath: $[?(@=~/^--kubelet-certificate-authority=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0"]
    metadata:
      Name: "The default namespace should not be used"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "5.7.4"
      ProfileApplicability: "Level 2 - Master Node"
      AssessmentStatus: Manual
    checker:
      - cloud_type: k8s
        listor: [2, 3, 4]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "object"
            }
          value_jsonpath: $.kind
  # ----------------
  # The following items are extended ones with same stratagy but not list on CIS benchmark
  # ----------------
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0_extend"]
    metadata:
      Name: "Ensure that the DenyServiceExternalIPs is set"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.3"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Manual
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "not": {
                "contains": {
                  "type": "string",
                  "pattern": "^--disable-admission-plugins=([\\w-]+,)*DenyServiceExternalIPs"
                }
              }
            }
          value_jsonpath: $[?(@=~/^--disable-admission-plugins=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0_extend"]
    metadata:
      Name: "Ensure that the --authorization-mode argument is not set to AlwaysAllow"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.6"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Automated
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "contains": {
                "type": "string",
                "pattern": "^--authorization-mode=([\\w-]+,)*AlwaysAllow"
              }
            }
          value_jsonpath: $[?(@=~/^--authorization-mode=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0_extend"]
    metadata:
      Name: "Ensure that the --authorization-mode argument includes Node"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.7"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Automated
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "not": {
                "contains": {
                  "type": "string",
                  "pattern": "^--authorization-mode=([\\w-]+,)*Node"
                }
              }
            }
          value_jsonpath: $[?(@=~/^--authorization-mode=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0_extend"]
    metadata:
      Name: "Ensure that the --authorization-mode argument includes RBAC"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.8"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Automated
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "not": {
                "contains": {
                  "type": "string",
                  "pattern": "^--authorization-mode=([\\w-]+,)*RBAC"
                }
              }
            }
          value_jsonpath: $[?(@=~/^--authorization-mode=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0_extend"]
    metadata:
      Name: "Ensure that the admission control plugin EventRateLimit is set"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.9"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Manual
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "not": {
                "contains": {
                  "type": "string",
                  "pattern": "^--enable-admission-plugins=([\\w-]+,)*EventRateLimit"
                }
              }
            }
          value_jsonpath: $[?(@=~/^--enable-admission-plugins=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0_extend"]
    metadata:
      Name: "Ensure that the admission control plugin AlwaysAdmit is not set"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.10"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Automated
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "contains": {
                "type": "string",
                "pattern": "^--enable-admission-plugins=([\\w-]+,)*AlwaysAdmit"
              }
            }
          value_jsonpath: $[?(@=~/^--enable-admission-plugins=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0_extend"]
    metadata:
      Name: "Ensure that the admission control plugin AlwaysPullImages is set"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.11"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Manual
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "not": {
                "contains": {
                  "type": "string",
                  "pattern": "^--enable-admission-plugins=([\\w-]+,)*AlwaysPullImages"
                }
              }
            }
          value_jsonpath: $[?(@=~/^--enable-admission-plugins=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0_extend"]
    metadata:
      Name: "Ensure that the admission control plugin ServiceAccount is set"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.12"
      ProfileApplicability: "Level 2 - Master Node"
      AssessmentStatus: Automated
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "contains": {
                "type": "string",
                "pattern": "^--disable-admission-plugins=([\\w-]+,)*ServiceAccount"
              }
            }
          value_jsonpath: $[?(@=~/^--disable-admission-plugins=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0_extend"]
    metadata:
      Name: "Ensure that the admission control plugin NamespaceLifecycle is set"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.13"
      ProfileApplicability: "Level 2 - Master Node"
      AssessmentStatus: Automated
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "contains": {
                "type": "string",
                "pattern": "^--disable-admission-plugins=([\\w-]+,)*NamespaceLifecycle"
              }
            }
          value_jsonpath: $[?(@=~/^--disable-admission-plugins=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0_extend"]
    metadata:
      Name: "Ensure that the admission control plugin NodeRestriction is set"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.14"
      ProfileApplicability: "Level 2 - Master Node"
      AssessmentStatus: Automated
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "not": {
                "contains": {
                  "type": "string",
                  "pattern": "^--enable-admission-plugins=([\\w-]+,)*NodeRestriction"
                }
              }
            }
          value_jsonpath: $[?(@=~/^--enable-admission-plugins=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0_extend"]
    metadata:
      Name: "Ensure that the --profiling argument is set to false"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.15"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Automated
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "anyOf": [
                {
                  "contains": {
                    "type": "string",
                    "enum": ["--profiling=true"]
                  }
                },
                {
                  "not": {
                    "contains": {
                      "type": "string",
                      "pattern": "^--profiling="
                    }
                  }
                }
              ]
            }
          value_jsonpath: $[?(@=~/^--profiling=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0_extend"]
    metadata:
      Name: "Ensure that the --audit-log-path argument is set"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.16"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Automated
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "not": {
                "contains": {
                  "type": "string",
                  "pattern": "^--audit-log-path="
                }
              }
            }
          value_jsonpath: $[?(@=~/^--audit-log-path=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0_extend"]
    metadata:
      Name: "Ensure that the --audit-log-maxage argument is set to 30 or as appropriate"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.17"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Automated
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "not": {
                "contains": {
                  "type": "string",
                  "enum": ["--audit-log-maxage=30"]
                }
              }
            }
          value_jsonpath: $[?(@=~/^--audit-log-maxage=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0_extend"]
    metadata:
      Name: "Ensure that the --audit-log-maxbackup argument is set to 10 or as appropriate"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.18"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Automated
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "not": {
                "contains": {
                  "type": "string",
                  "enum": ["--audit-log-maxbackup=10"]
                }
              }
            }
          value_jsonpath: $[?(@=~/^--audit-log-maxbackup=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0_extend"]
    metadata:
      Name: "Ensure that the --audit-log-maxsize argument is set to 100 or as appropriate"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.19"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Automated
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "not": {
                "contains": {
                  "type": "string",
                  "enum": ["--audit-log-maxsize=100"]
                }
              }
            }
          value_jsonpath: $[?(@=~/^--audit-log-maxsize=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0_extend"]
    metadata:
      Name: "Ensure that the --service-account-lookup argument is set to true"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.21"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Automated
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "contains": {
                "type": "string",
                "enum": ["--service-account-lookup=false"]
              }
            }
          value_jsonpath: $[?(@=~/^--service-account-lookup=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0_extend"]
    metadata:
      Name: "Ensure that the --service-account-key-file argument is set as appropriate"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.22"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Automated
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "not": {
                "contains": {
                  "type": "string",
                  "pattern": "^--service-account-key-file="
                }
              }
            }
          value_jsonpath: $[?(@=~/^--service-account-key-file=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0_extend"]
    metadata:
      Name: "Ensure that the --etcd-certfile and --etcd-keyfile arguments are set as appropriate"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.23"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Automated
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "not": {
                "allOf": [
                  {
                    "contains": {
                      "type": "string",
                      "pattern": "^--etcd-certfile="
                    }
                  },
                  {
                    "contains": {
                      "type": "string",
                      "pattern": "^--etcd-keyfile="
                    }
                  }
                ]
              }
            }
          value_jsonpath: $[?(@=~/^--etcd-(certfile|keyfile)=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0_extend"]
    metadata:
      Name: "Ensure that the --tls-cert-file and --tls-private-key-file arguments are set as appropriate"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.24"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Automated
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "not": {
                "allOf": [
                  {
                    "contains": {
                      "type": "string",
                      "pattern": "^--tls-cert-file="
                    }
                  },
                  {
                    "contains": {
                      "type": "string",
                      "pattern": "^--tls-private-key-file="
                    }
                  }
                ]
              }
            }
          value_jsonpath: $[?(@=~/^--tls-(cert|private-key)-file=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0_extend"]
    metadata:
      Name: "Ensure that the --client-ca-file argument is set as appropriate"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.25"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Automated
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "not": {
                "contains": {
                  "type": "string",
                  "pattern": "^--client-ca-file="
                }
              }
            }
          value_jsonpath: $[?(@=~/^--client-ca-file=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0_extend"]
    metadata:
      Name: "Ensure that the --etcd-cafile argument is set as appropriate"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.26"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Automated
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "not": {
                "contains": {
                  "type": "string",
                  "pattern": "^--etcd-cafile="
                }
              }
            }
          value_jsonpath: $[?(@=~/^--etcd-cafile=/)]
  - tag: ["test", "CIS_Kubernetes_Benchmark_v1.9.0_extend"]
    metadata:
      Name: "Ensure that the --encryption-provider-config argument is set as appropriate"
      Benchmark: "CIS_Kubernetes_Benchmark_v1.9.0"
      Section: "1.2.27"
      ProfileApplicability: "Level 1 - Master Node"
      AssessmentStatus: Manual
    checker:
      - cloud_type: k8s
        listor: [1]
        extract_cmd:
          id_jsonpath: $.metadata.name
          extract_jsonpath:
            path: $.spec.containers[0].command[*]
        validator:
          validate_schema: |
            {
              "$schema": "https://json-schema.org/draft/2019-09/schema",
              "type": "array",
              "not": {
                "contains": {
                  "type": "string",
                  "pattern": "^--encryption-provider-config="
                }
              }
            }
          value_jsonpath: $[?(@=~/^--encryption-provider-config=/)]
