# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go build

env:
  CGO_ENABLED: 0

on:
  workflow_dispatch:
  push:
    branches: [ "build_arm64" ]
    paths:
      - '.github/workflows/go_build.yml'

jobs:

  build:
    runs-on: ${{ matrix.os.type }}

    # create a build matrix for jobs
    strategy:
      matrix:
        arch:
          - default
          - arm64
        os:
          - type: ubuntu-latest
            name: Linux
          - type: windows-latest
            name: Windows
            postfix: .exe
          - type: macos-latest
            name: MacOS
        exclude:
          - os: macos-latest
            arch: arm64

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 'stable'

    - name: Build
      env:
        GOARCH: ${{ matrix.arch != 'default' && 'arm64' || '' }}
      run: go build -ldflags="-w -s" -o output/main${{ matrix.os.postfix }} -v ./bin/cmd/main.go

    - name: Build apiserver
      env:
        GOARCH: ${{ matrix.arch != 'default' && 'arm64' || '' }}
      run: go build -ldflags="-w -s" -o output/apiserver${{ matrix.os.postfix }} -v ./bin/apiserver/main.go

    - name: upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Release-${{ matrix.os.name }}${{ matrix.os.name != 'MacOS' && (matrix.arch == 'default' && '-amd64' || '-arm64') || '' }}
        path: output/*
